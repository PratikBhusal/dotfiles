# This is Git's per-user configuration file.
#
# TODO: Go through the following:
# - https://jvns.ca/blog/2024/02/16/popular-git-config-options/
#
# TODO: Once difftastic has better github/delta-like background highlighting and
# 24-bit color support, consider using it over git-delta. See:
# - https://github.com/Wilfred/difftastic/issues/265
# - https://github.com/Wilfred/difftastic/issues/275
# - https://github.com/Wilfred/difftastic/pull/286
# - https://github.com/Wilfred/difftastic/issues/613
[color]
    diff        = auto
    status      = auto
    branch      = auto
    interactive = auto
    ui          = auto
    pager       = true
[user]
# Please adapt and uncomment the following lines:
    name        = PratikBhusal
    email       = PratikBhusal@users.noreply.github.com
[core]
    autocrlf    = input
    editor = nvim
    pager = delta
[include]
    path = ~/.config/delta/themes.gitconfig
[diff]
    tool = nvimdiff
    # Improve upon the default greedy algorithm for code changes. See:
    # - https://luppeng.wordpress.com/2020/10/10/when-to-use-each-of-the-git-diff-algorithms
    # - https://link.springer.com/article/10.1007/s10664-019-09772-z
    algorithm = histogram
[commit]
    verbose     = true
# [merge]
#   ff = no
# git log --exclude=refs/remotes/\* --all --oneline --graph
[alias]
    st = status
    loglocalgraph = log --exclude=refs/remotes/* --all --oneline --graph
    cane= commit --amend --no-edit
    uso = ! git diff --cached --name-only --diff-filter=d | xargs git add -u
    # Make it a bit more explicit and safe that you want to force push changes
    push--force = push --force-with-lease --force-if-includes
[init]
    defaultBranch = main
[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[interactive]
    diffFilter = delta --color-only
[delta]
    features = darkokai
[credential]
    helper = git-credential-manager
[merge]
    # See:
    # - https://stackoverflow.com/questions/71252026/how-do-i-use-zealous-diff3-with-git-and-what-are-the-pros-and-cons
    # - https://ductile.systems/zdiff3/
    conflictStyle = zdiff3
[push]
    # See:
    # - https://git-scm.com/docs/git-config/#Documentation/git-config.txt-pushautoSetupRemote
    autoSetupRemote = true
    # Make `git push --force` more safe. If local commits include the latest
    # changes of the remote branch to which you are pushing (meaning the current
    # commits of the remote branch are found within your local commits), then
    # the git push operation will proceed. If the remote repository's commits
    # are not present locally, this forced push operation is denied.
    #
    # In other words:
    # - Ensures that local commits encompass the remote changes.
    # - Prevents accidental overwriting of changes in the remote repository.
    # - Avoids critical errors, especially when multiple people are working on
    #   the same repository.
    #
    # See:
    # - https://vladimirzdrazil.com/til/git/git-force-if-includes
    # - https://medium.yemreak.com/safe-pushing-with-git-3714ffec9ac1
    # - https://stackoverflow.com/questions/65837109/when-should-i-use-git-push-force-if-includes
    useForceIfIncludes = true
[branch]
    # Sort branches by last committed in ascending order ie branch with newest
    # commit is at the bottom.
    sort = committerdate
[rebase]
    # Improve upon the usual stacked branch workflow by automatically updating
    # refs when rebasing.
    #
    # See:
    # - https://andrewlock.net/working-with-stacked-branches-in-git-is-easier-with-update-refs
    #
    # TODO: Look into git-branchless:
    # - https://github.com/arxanas/git-branchless
    updateRefs = true
# # Note: prune configs commented out because it has not been fully vetted. Will
# # tinker around locally before commiting to the inclusion by default in remote.
# [fetch]
#     # If a branch/tag no longer exists in the remote repository, remove the local
#     # reference when calling `git fetch` by default
#     prune = true
#     prunetags = true
