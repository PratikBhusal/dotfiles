" Essentials {{{ ---------------------------------------------------------------
set encoding=utf-8
scriptencoding utf-8
set noshowmode
set showcmd
set hlsearch
set autoindent
set nostartofline
set confirm
set fileformat=unix
set fileformats=unix,dos
set noerrorbells visualbell t_vb=
if has('autocmd')
  autocmd GUIEnter * set visualbell t_vb=
endif
nnoremap <silent> <TAB> :bnext<cr>
" Return to last edit position
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \     exe "normal! g`\"" |
     \ endif

call plugin_manager#vim_plug()
" Essentials }}} ---------------------------------------------------------------

" Change location of temporary files {{{ ---------------------------------------
set undodir=~/.vim/.cache/.undo//
set backupdir=~/.vim/.cache/.backup//
set directory=~/.vim/.cache/.swp//
set viminfo+=n~/.vim/.cache/.viminfo
let g:netrw_home='~/.vim/.cache//'

if !isdirectory(expand(&undodir))
    call mkdir(expand(&undodir), "p")
endif
if !isdirectory(expand(&backupdir))
    call mkdir(expand(&backupdir), "p")
endif
if !isdirectory(expand(&directory))
    call mkdir(expand(&directory), "p")
endif
" Change location of temporary files  1}}} -------------------------------------

" Live the Vim Life {{{ --------------------------------------------------------
inoremap <silent> <up> <nop>
inoremap <silent> <down> <nop>
inoremap <silent> <left> <nop>
inoremap <silent> <right> <nop>
inoremap <silent> <C-c> <nop>

nnoremap <silent> <up> <nop>
nnoremap <silent> <down> <nop>
nnoremap <silent> <left> <nop>
nnoremap <silent> <right> <nop>

vnoremap <silent> <up> <nop>
vnoremap <silent> <down> <nop>
vnoremap <silent> <left> <nop>
vnoremap <silent> <right> <nop>
" Live the Vim Life  }}} -------------------------------------------------------

" Auto Update at save {{{ ------------------------------------------------------
augroup reload_vimrc " {
autocmd!
autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }
" Auto Update at save }}} ------------------------------------------------------

" Windows heterogeneous OS compatibilty {{{ ------------------------------------
" if g:windows
"     set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after
"     set runtimepath+=$Home/.vim/after
" endif
" }}} --------------------------------------------------------------------------

" Lazy Kebindings {{{ ----------------------------------------------------------
autocmd BufEnter * silent! lcd %:p:h
command! Q q
command! W w
command! WQ wq
command! Wq wq
inoremap jk <Esc>
let g:mapleader = "\<Space>"
let g:maplocalleader = "\<Space>"
nnoremap <SPACE> <Nop>
nnoremap ; :
set autochdir
set mouse=a
cabbrev ex Ex
cabbrev vimtutor view $HOME/.vim/vimtutor
set gdefault " no need to include g flag in substitutions
" Lazy Kebindings }}} ----------------------------------------------------------

" Text Wrapping & Border Config {{{ --------------------------------------------
set tw=80
execute "set colorcolumn=" .join(range(81,120), ',')
" Text Wrapping & Border Config }}} --------------------------------------------

" Sorting {{{ ------------------------------------------------------------------
nnoremap <leader>s vip:!sort<cr>
vnoremap <leader>s :!sort<cr>
" Sorting }}} ------------------------------------------------------------------

" Make things look nice {{{ ----------------------------------------------------
set shortmess=at
set list " Display whitespace
" set listchars+=eol:Â¬
syntax on
set hidden
set number
set relativenumber
set mousehide
set guioptions-=m  "remove menubar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar
set linespace=0
let g:indent_guides_guide_size= 2
set background=dark
"Colorscheme Choice
colorscheme molokai
if !has('gui_running')
    let g:rehash256 = 1
endif
" Delete Trailing Whitespace
" autocmd BufWritePre * %s/\s\+$//e
" Make things look nice }}} ----------------------------------------------------

" Change how the cursor looks {{{ ----------------------------------------------
set guicursor=c-i-ci:ver15-Cursor/lCursor
set guicursor=v:hor15-Cursor/lCursor
" Change how the cursor looks }}} ----------------------------------------------

" Make searching less tedious (Without it put \c (insen) or \C (sen) at end) {{{
set ignorecase
set smartcase
" Make searching less tedious (Without it put \c (insen) or \C (sen) at end)  }}}

" Set tab intent to 4 spaces {{{ -----------------------------------------------
set tabstop=8 softtabstop=4 expandtab shiftwidth=4 smarttab
" Set tab intent to 4 spaces }}} -----------------------------------------------

" Folding {{{ ------------------------------------------------------------------
set foldmethod=marker
" set foldlevelstart=0
nnoremap <silent> \ @=(foldlevel('.')?'za':"\\")<CR>
augroup folding
  au BufReadPre * setlocal foldmethod=indent
  au BufWinEnter * if &fdm == 'indent' | setlocal foldmethod=marker | endif
augroup END
" Folding }}} ------------------------------------------------------------------

set foldmethod=marker " Fold on marker
" set foldclose=all     " Close folds if you leave them in any way
set foldenable        " Turn on folding
set foldlevel=0       " Autofold everything by default
" Folding }}} ------------------------------------------------------------------

" Autocompletion {{{ -----------------------------------------------------------
set completeopt=preview,menu,noinsert
autocmd CompleteDone * if pumvisible() == 0|silent! pclose|endif
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow
inoremap <C-@> <C-Space>
" inoremap <expr> <silent> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <silent> <expr>  <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

inoremap <silent> <expr> <M-,> pumvisible() ? '<C-n>' :
  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
" Autocompletion }}} -----------------------------------------------------------

" Cursor Line Highlight {{{ ----------------------------------------------------
" augroup CursorLine
"   au!
"   au VimEnter,WinEnter,BufWinEnter * setlocal cursorline
"   au WinLeave * setlocal nocursorline
" augroup END
" Cursor Line Highlight }}} ----------------------------------------------------

" wildignore settings {{{ ------------------------------------------------------
" Temporary & Vim Files
set wildignore+=*/tmp/*,*\\tmp\\*,*.swp

" Zipped Files
set wildignore+=*.zip

" Compiled Files
set wildignore+=*.exe,*.so

" Wildignore Settings }}} ------------------------------------------------------
